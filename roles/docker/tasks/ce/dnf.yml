---
# code: language=ansible

- name: Docker | CE | DNF | Add repository key
  block:
    - name: Docker | CE | DNF | Add repository key
      ansible.builtin.rpm_key:
        key: "{{ docker_ce_gpg_key }}"
  rescue:
    - name: Docker | CE | DNF | Ensure curl is present (systems without SNI).
      ansible.builtin.package:
        name: curl
      register: task_result
      until: task_result is success
      retries: 10
      delay: 2
    - name: Docker | CE | DNF | Download GPG key (systems without SNI).  # noqa command-instead-of-module no-changed-when
      ansible.builtin.command: curl -sSL {{ docker_ce_gpg_key }} -o /tmp/docker-gpg
    - name: Docker | CE | DNF | Add Docker GPG key (systems without SNI).  # noqa command-instead-of-module no-changed-when
      ansible.builtin.command: rpm --import /tmp/docker-gpg
    - name: Docker | CE | DNF | Remove docker-gpg from tmp folder
      ansible.builtin.file:
        path: /tmp/docker-gpg
        state: absent

- name: Docker | CE | DNF | Deploy repository
  block:
    - name: Docker | CE | DNF | Deploy repository
      ansible.builtin.get_url:
        url: "{{ docker_ce_repo_file_url }}"
        dest: /etc/yum.repos.d/docker-ce.repo
        owner: root
        group: root
        mode: "0644"
  rescue:
    - name: Docker | CE | DNF | Install dnf-utils (systems without SNI)
      ansible.builtin.dnf:
        name: dnf-plugins-core
      register: task_result
      until: task_result is success
      retries: 10
      delay: 2
    - name: Docker | CE | DNF | Deploy repository (systems without SNI) # noqa command-instead-of-module
      ansible.builtin.command: dnf config-manager --add-repo {{ docker_ce_repo_file_url }}
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

- name: Docker | CE | DNF | Enable edge repository
  ansible.builtin.yum_repository:
    name: docker-ce-edge
    description: Docker CE Edge - $basearch
    baseurl: "{{ docker_ce_edge_repo_url }}"
    gpgcheck: true
    gpgkey: "{{ docker_ce_gpg_key }}"
    enabled: true
    file: docker-ce
  when: docker_channel == "edge"

- name: Docker | CE | DNF | Perform specific os tasks
  ansible.builtin.include_tasks: "{{ item }}"
  with_first_found:
    - os/{{ ansible_distribution.split(' ', 1)[0] | lower }}.yml
    - os/default.yml

- name: Docker | CE | DNF | Install docker-ce
  ansible.builtin.dnf:
    name: docker-ce
    state: present
  notify: Docker | Restart Docker
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2
